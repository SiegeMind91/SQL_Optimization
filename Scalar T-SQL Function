//Microsoft's example - ISOweek function
//This one is awesome because it has if statements too 

CREATE FUNCTION dbo.ISOweek (@DATE datetime) --notice that it takes an argument of type Date
RETURNS int
WITH EXECUTE AS CALLER --Here we're saying to use the credentials of the person who executed the script
AS
BEGIN
    DECLARE @ISOweek int;
    SET @ISOweek= DATEPART(wk,@DATE)+1
        -DATEPART(wk,CAST(DATEPART(yy,@DATE) as CHAR(4))+'0104');
--Special cases: Jan 1-3 may belong to the previous year
    IF (@ISOweek=0)
        SET @ISOweek=dbo.ISOweek(CAST(DATEPART(yy,@DATE)-1
            AS CHAR(4))+'12'+ CAST(24+DATEPART(DAY,@DATE) AS CHAR(2)))+1;
--Special case: Dec 29-31 may belong to the next year
    IF ((DATEPART(mm,@DATE)=12) AND
        ((DATEPART(dd,@DATE)-DATEPART(dw,@DATE))>= 28))
    SET @ISOweek=1;
    RETURN(@ISOweek);
END;
GO
SET DATEFIRST 1; --Setting our first day of the week to Monday
SELECT dbo.ISOweek(CONVERT(DATETIME,'12/26/2004',101)) AS 'ISO Week';


//But functions can also be a lot simpler
//Here's one I wrote for converting to the German styled date

CREATE FUNCTION dbo.GermanFormattedDate (@DATE datetime)
RETURNS nvarchar
WITH EXECUTE AS CALLER
AS
BEGIN
  DECLARE @FormWeek nvarchar;
  SET @FormWeek = FORMAT( @d, 'd', 'de-de' ) 'German'; 
  RETURN @FormWeek;
END;
GO
SET DATEFIRST 1; 
SELECT dbo.FormattedDate(CONVERT(DATETIME, '1/1/2022', 101)) AS 'Formatted Date'; --The AS here is unnecessary, but it looks nice :)
